install.packages("tidyverse")
5+87
gamma(2)
gamma(3)
gamma(6)
correction_J <- function(a) { gamma(a / 2) / (sqrt(a/2) * (a - 1) / 2) }
correction_J(200)
correction_J <- function(a) { gamma(a / 2) / ( sqrt(a/2) * ( (a - 1) / 2 ) ) }
correction_J(200)
correction_J <- function(a) { 1 - 3 / (4 * a - 9) }
correction_J(200)
get_name <- function() {
if (options$effectSizesCheckbox == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
get_name <- function() {
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
install.packages("tidyverse")
phyper(43,70,50,81)
phyper(43, 81, 39, 70)
?phyper
rm(list = ls())
par(mfrow = c(1, 1))
set.seed(123)
setwd(
sprintf(
"%s%s",
"C:\\Users\\Bram\\Documents\\Google Drive\\",
"Uni\\Statistical Data Analysis\\Assignment 12"
)
)
source("functions_Ch8.txt")
### Exercise 1
geese <- read.table("geese.txt", header = T)
## A
pairs(geese) # looks okay for lin reg.
plot(c(geese$observer1, geese$observer.2), geese$photo)
plot(geese$observer1, geese$photo)
## A
pairs(geese) # looks okay for lin reg.
## A
pairs(geese) # looks okay for lin reg.
## B
lmpo1 <- lm(formula = photo ~ observer1, data = geese)
lmpo2 <- lm(formula = photo ~ observer.2, data = geese)
summary(lmpo1)
summary(lmpo1)
summary(lmpo2)
par(mfrow = c(1, 2))
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$photo)
abline(v = 0)
plot(residuals(lmpo2), geese$photo)
abline(v = 0)
### Exercise 2
airpoll <- read.table("airpollution.txt", header = T)
## A
pairs(airpoll)
## B
lmpo1 <- lm(formula = observer1 ~ photo, data = geese)
lmpo2 <- lm(formula = observer.2 ~ photo, data = geese)
summary(lmpo1)
summary(lmpo2)
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$photo)
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$observer1)
abline(v = 0)
plot(residuals(lmpo2), geese$observer.2)
abline(v = 0)
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$observer1)
abline(v = 0)
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$observer1)
abline(v = 0)
plot(residuals(lmpo2), geese$observer.2)
abline(v = 0)
View(lm.norm.test)
View(lm.norm.test)
View(lm.norm.test)
# Page 120 (125) indicates we should transform variables or use nonlinear model.
# TODO: maybe the observers are Y's.
# (Assumption of equal variance of measurement errors not met.)
## D
qqnorm(residuals(lmpo1))
qqnorm(residuals(lmpo2))
ks1 <- lm.norm.test(geese$photo, geese$observer1)
hist(ks1) # TODO: convert to p as in example 4.5.
ks2 <- lm.norm.test(geese$photo, geese$observer.2)
hist(ks2) # TODO: convert to p as in example 4.5.
lm.norm.test
## E
lgeese <- log(geese)
pairs(lgeese)
llmpo1 <- lm(formula = observer1 ~ photo, data = lgeese)
llmpo2 <- lm(formula = observer.2 ~ photo, data = lgeese)
summary(llmpo1)
summary(llmpo2)
plot(residuals(llmpo1), lgeese$observer1)
abline(v = 0)
plot(residuals(llmpo2), lgeese$observer.2)
abline(v = 0)
qqnorm(residuals(llmpo1))
qqnorm(residuals(llmpo2))
lks1 <- lm.norm.test(lgeese$photo, lgeese$observer1)
hist(lks1) # TODO: convert to p as in example 4.5.
lks2 <- lm.norm.test(lgeese$photo, lgeese$observer.2)
hist(lks2) # TODO: convert to p as in example 4.5.
rm(list = ls())
par(mfrow = c(1, 2))
set.seed(123)
setwd(
sprintf(
"%s%s",
"C:\\Users\\Bram\\Documents\\Google Drive\\",
"Uni\\Statistical Data Analysis\\Assignment 12"
)
)
source("functions_Ch8.txt")
### Exercise 1
geese <- read.table("geese.txt", header = T)
## A
pairs(geese) # looks okay for lin reg.
## B
lmpo1 <- lm(formula = observer1 ~ photo, data = geese)
lmpo2 <- lm(formula = observer.2 ~ photo, data = geese)
summary(lmpo1)
summary(lmpo2)
# Both B_1s != 0 with very low p.
## C
plot(residuals(lmpo1), geese$observer1)
abline(v = 0)
plot(residuals(lmpo2), geese$observer.2)
abline(v = 0)
# Page 120 (125) indicates we should transform variables or use nonlinear model.
# (Assumption of equal variance of measurement errors not met.)
## D
qqnorm(residuals(lmpo1))
qqnorm(residuals(lmpo2))
ks1 <- lm.norm.test(geese$photo, geese$observer1)
hist(ks1) # TODO: convert to p as in example 4.5.
ks2 <- lm.norm.test(geese$photo, geese$observer.2)
hist(ks2) # TODO: convert to p as in example 4.5.
## E
lgeese <- log(geese)
pairs(lgeese)
llmpo1 <- lm(formula = observer1 ~ photo, data = lgeese)
llmpo2 <- lm(formula = observer.2 ~ photo, data = lgeese)
summary(llmpo1)
summary(llmpo2)
plot(residuals(llmpo1), lgeese$observer1)
abline(v = 0)
plot(residuals(llmpo2), lgeese$observer.2)
abline(v = 0)
qqnorm(residuals(llmpo1))
qqnorm(residuals(llmpo2))
lks1 <- lm.norm.test(lgeese$photo, lgeese$observer1)
hist(lks1) # TODO: convert to p as in example 4.5.
lks2 <- lm.norm.test(lgeese$photo, lgeese$observer.2)
hist(lks2) # TODO: convert to p as in example 4.5.
## F
# The log-transformed data is preferred in any case.
# Observer 1 obtains a lower R^2.
## G
# 1. The observers are pretty good, at least with a low # of birds.
# 2. Obs 1 is very slightly 'better-modellable/-consistent' than obs 2.
### Exercise 2
airpoll <- read.table("airpollution.txt", header = T)
## A
pairs(airpoll)
## B
aw <- lm(formula = oxidant ~ wind, data = airpoll)
at <- lm(formula = oxidant ~ temperature, data = airpoll)
ah <- lm(formula = oxidant ~ humidity, data = airpoll)
ai <- lm(formula = oxidant ~ insolation, data = airpoll)
summary(aw) # R^2 = 0.59, p = 8e-7
summary(at) # R^2 = 0.58, p = 1e-6
summary(ah) # R^2 = 0.12, p = 0.056
summary(ai) # R^2 = 0.25, p = 0.0044
# R^2 is something like 'fraction of explained variance', so add the best: wind.
awt <- lm(formula = oxidant ~ wind + temperature, data = airpoll)
awth <-
lm(formula = oxidant ~ wind + temperature + humidity,
data = airpoll)
awti <-
lm(formula = oxidant ~ wind + temperature + insolation,
data = airpoll)
summary(awt) # R^2 = 0.78, p = 1.56e-9
summary(awth) # R^2 = 0.80 (0.796), p = 3.9e-9
summary(awti) # R^2 = 0.78, p = 9.5e-9
# Just wind and T as independent vars looks good, not enough R^2 increase.
# (Seperate variables also get insignificant t-test p-values.)
# (Also similar residual standard error.)
## C
a <-
lm(formula = oxidant ~ wind + temperature + humidity + insolation,
data = airpoll)
summary(a) # coefficients espectively -0.44, 0.56, 0.093, 0.022
resgeese1 = residuals(lmgeese1)
resgeese2 = residuals(lmgeese2)
ks.test(resgeese, pnorm, 0., sgeese)
D1=ks.test(resgeese1, pnorm, 0., sgeese)[[1]]
D2=ks.test(resgeese2, pnorm, 0., sgeese)[[1]]
mean(ks1>D1)
mean(ks1>D2)
sgeese1 = summary(lmpo1)[[6]]
sgeese2 = summary(lmpo2)[[6]]
resgeese1 = residuals(lmpo1)
resgeese2 = residuals(lmpo2)
D1=ks.test(resgeese1, pnorm, 0., sgeese1)[[1]]
D2=ks.test(resgeese2, pnorm, 0., sgeese2)[[1]]
mean(ks1>D1)
mean(ks2>D2)
lgeese <- log(geese)
pairs(lgeese)
llmpo1 <- lm(formula = observer1 ~ photo, data = lgeese)
llmpo2 <- lm(formula = observer.2 ~ photo, data = lgeese)
summary(llmpo1)
summary(llmpo2)
plot(residuals(llmpo1), lgeese$observer1)
abline(v = 0)
plot(residuals(llmpo2), lgeese$observer.2)
abline(v = 0)
qqnorm(residuals(llmpo1))
qqnorm(residuals(llmpo2))
lks1 <- lm.norm.test(lgeese$photo, lgeese$observer1)
lks2 <- lm.norm.test(lgeese$photo, lgeese$observer.2)
lsgeese1 = summary(llmpo1)[[6]]
lsgeese2 = summary(llmpo2)[[6]]
lresgeese1 = residuals(llmpo1)
lresgeese2 = residuals(llmpo2)
lD1=ks.test(lresgeese1, pnorm, 0., lsgeese1)[[1]]
lD2=ks.test(lresgeese2, pnorm, 0., lsgeese2)[[1]]
mean(lks1>lD1)
mean(lks2>lD2)
summary(awt) # the best (and good enough)
awt <- lm(formula = oxidant ~ wind + temperature, data = airpoll)
awh <- lm(formula = oxidant ~ wind + humidity, data = airpoll)
awi <- lm(formula = oxidant ~ wind + insolation, data = airpoll)
summary(awt) # the best (and good enough)
summary(awh)
summary(awi)
summary(llmpo1)
summary(llmpo2)
summary(llmpo1)
summary(llmpo2)
summary(awth) # R^2 = 0.80 (0.796), p = 3.9e-9
summary(awti) # R^2 = 0.78, p = 9.5e-9
summary(awt) # R^2 = 0.78, p = 1.56e-9
summary(awth) # R^2 = 0.80 (0.796), p = 3.9e-9
summary(awti) # R^2 = 0.78, p = 9.5e-9
a <-
lm(formula = oxidant ~ wind + temperature + humidity + insolation,
data = airpoll)
summary(a)
