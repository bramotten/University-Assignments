install.packages("tidyverse")
5+87
gamma(2)
gamma(3)
gamma(6)
correction_J <- function(a) { gamma(a / 2) / (sqrt(a/2) * (a - 1) / 2) }
correction_J(200)
correction_J <- function(a) { gamma(a / 2) / ( sqrt(a/2) * ( (a - 1) / 2 ) ) }
correction_J(200)
correction_J <- function(a) { 1 - 3 / (4 * a - 9) }
correction_J(200)
get_name <- function() {
if (options$effectSizesCheckbox == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
get_name <- function() {
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
install.packages("tidyverse")
summary(nc_last46)
boxplot(nc_first20, nc_last46)
rm(list = ls())
par(mfrow = c(1,1))
set.seed(123)
setwd(sprintf("%s%s", "C:\\Users\\Bram\\Documents\\Google Drive\\",
"Uni\\Statistical Data Analysis\\Assignment 9"))
source("functions_Ch4.txt")
source("functions_Ch6.txt")
### Exercise 1
## A
wilco_stat = function(X, m0 = 0) {
V = 0
for (i in 1 : length(X)) {
V = V + rank(abs(X - m0))[i] * sign(X[i] - m0)
}
V
}
sign_stat = function(X, m0 = 0) {
sum(X > m0)
}
## B
n = 200
for (th in c(0, .05, .1, .15)) {
wilco_rejects = 0
sign_rejects = 0
for (i in 1 : 1000) {
X = runif(n, min = -1 + th, max = 1 + th)
V = wilco_stat(X)
wilco_rejects = wilco_rejects + (V > 1.644854*sqrt(n*(n+1)*(2*n+1)/6))
S = sign_stat(X)
sign_rejects = sign_rejects + (S > 1.544854*sqrt(n)/2+n/2)
}
print("Line order: theta, Wilco rejects, sign rejects")
print(th)
print(wilco_rejects)
print(sign_rejects)
}
## D
# Heeft Jim +-
### Exercise 2
## A
nc = scan("newcomb.txt")
nc_first20 = nc[1:20]; nc_last46 = nc[21:length(nc)]
summary(nc_first20)
summary(nc_last46)
boxplot(nc_first20, nc_last46)
# median test is 2 * that 1 - phyper
wilcox.test(nc_first20, nc_last46) # p = 0.12
ks.test(nc_first20, nc_last46) # p = 0.328
## B
meas <- function(data) {
mean(data, trim = .2)
}
meas(nc)
bs1 = bootstrap(nc, meas, B=1000); bs2 = meas(nc)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
boxplot(nc_first20, nc_last46)
# median test is 2 * that 1 - phyper
qqplot(nc_first20)
# median test is 2 * that 1 - phyper
qqnorm(nc_first20)
# median test is 2 * that 1 - phyper
qqlogis(nc_first20)
# median test is 2 * that 1 - phyper
qqlaplace(nc_first20)
hist(nc)
?aresimulation
qqnorm(nc_last46)
ata = c(nc_first20, nc_last46)
t = sum(nc_first20 <= median(data))
t
data = c(nc_first20, nc_last46)
t = sum(nc_first20 <= median(data))
t
1 - phyper(t-1, nx, ny, floor(nx+ny+1)/2)
x = nc_first20; y = nc_last46
data = c(x, y)
t = sum(x <= median(data))
nx = length(x): ny = length(y)
1 - phyper(t-1, nx, ny, floor(nx+ny+1)/2)
nx = length(x): ny = length(y)
nx = length(x); ny = length(y)
1 - phyper(t-1, nx, ny, floor(nx+ny+1)/2)
ks.test(x, y) # p = 0.33
wilcox.test(x, y) # p = 0.12
1 - phyper(t-1, nx, ny, floor(nx+ny+1)/2) # p = 0.26
## B
meas <- function(data) {
mean(data, trim = .2)
}
meas(nc)
bs1 = bootstrap(nc, meas, B=1000); bs2 = meas(nc)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
boxplot(nc_first20, nc_last46)
meas <- function(data) {
mean(data, trim = .2)
}
meas(nc_last46)
bs1 = bootstrap(nc_last46, meas, B=1000); bs2 = meas(nc_last46)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
sort(nc)
median(nc_first20)
mean(nc_first20)
mean(nc_first20, trim=.3)
mean(nc_first20, trim=.2)
mean(nc_first20, trim=.45)
mean(nc_first20, trim=.01)
## B
meas <- function(data) {
#mean(data, trim = .2)
median(data)
}
meas(nc)
bs1 = bootstrap(nc, meas, B=1000); bs2 = meas(nc)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
qqplot(x, y)
p1 <- hist(nc_first20)
p2 <- hist(nc_last46)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Precipitation values")
plot(p2, col=rgb(1,0,0,1/4), add=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Time delta in s", prob=T)
plot(p2, col=rgb(1,0,0,1/4), add=T, prob=T)
p1 <- hist(nc_first20)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Time delta in s")
p1 <- hist(nc_first20, prob=T)
p2 <- hist(nc_last46, prob=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Time delta in s")
plot(p2, col=rgb(1,0,0,1/4), add=T)
?plot
p1 <- hist(nc_first20, prob=T)
p2 <- hist(nc_last46, prob=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Time delta in s")
plot(p2, col=rgb(1,0,0,1/4), add=T)
?plot
?hist
p1 <- hist(nc_first20, ylim=c(-50,50), prob=T)
p1 <- hist(nc_first20, xlim=c(-50,50), prob=T)
p1 <- hist(nc_first20, xlim=c(-70,70), prob=T)
p2 <- hist(nc_last46, xlim=c(-60,60), prob=T)
p1 <- hist(nc_first20, xlim=c(-60,60), prob=T)
?hist
p1 <- hist(nc_first20, xlim=c(-60,60), breaks=20, prob=T)
p2 <- hist(nc_last46, xlim=c(-60,60), breaks=20, prob=T)
p1 <- hist(nc_first20, xlim=c(-60,60), breaks=20, prob=T)
?seq
p1 <- hist(nc_first20, xlim=c(-60,60), breaks=seq(-60, 60, 10), prob=T)
p2 <- hist(nc_last46, xlim=c(-60,60), breaks=20, breaks=seq(-60, 60, 5), prob=T)
p1 <- hist(nc_first20, xlim=c(-60,60), breaks=seq(-60, 60, 5), prob=T)
p2 <- hist(nc_last46, xlim=c(-60,60), breaks=seq(-60, 60, 5), prob=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for seeded,\nred for unseeded clouds",
xlab="Time delta in s")
plot(p2, col=rgb(1,0,0,1/4), add=T)
p1 <- hist(nc_first20, xlim=c(-60,60), breaks=seq(-60, 60, 5), prob=T, plot=F)
p1 <- hist(nc_first20, breaks=seq(-60, 60, 5), plot=F)
p2 <- hist(nc_last46, breaks=seq(-60, 60, 5), plot=F)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for first 20,\nred for last 46",
xlab="Measurement of time delta in s")
plot(p2, col=rgb(1,0,0,1/4), add=T)
p1 <- hist(nc_first20, breaks=seq(-60, 60, 5), plot=F)
p2 <- hist(nc_last46, breaks=seq(-60, 60, 5), plot=F)
p1$counts = p1$counts / sum(p1$counts)
p2$counts = p2$counts / sum(p2$counts)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for first 20,\nred for last 46",
xlab="Measurement of time delta in s")
plot(p2, col=rgb(1,0,0,1/4), add=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for first 20,\nred for last 46",
xlab="Measurement of time delta in s",
ylim=c(0,.4), ylab="Density")
plot(p2, col=rgb(1,0,0,1/4), add=T)
plot(p1, col=rgb(0,0,1,1/4),
main="Blue for first 20,\nred for last 46",
xlab="Measurement of time delta in s",
ylim=c(0,.5), ylab="Density")
plot(p2, col=rgb(1,0,0,1/4), add=T)
## B
# Probably want a robust estimator with the outliers.
meas <- function(data) {
mean(data, trim = .1)
#median(data)
}
meas(nc)
bs1 = bootstrap(nc, meas, B=1000); bs2 = meas(nc)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
sort(x)
nx
mean(data, trim = .2)
## B
# Probably want a robust estimator with the outliers.
meas <- function(data) {
mean(data, trim = .2)
}
meas(nc)
bs1 = bootstrap(nc, meas, B=1000); bs2 = meas(nc)
c(bs2-quantile(bs1-bs2, probs=.975), bs2-quantile(bs1-bs2, probs=.025))
