setwd("C:\\Users\\Bram\\Documents\\Google Drive\\Uni\\Statistical Data Analysis\\Assignment 2")
### Exercise 2.1
## A
par(mfrow=c(1,1))
aRange = seq(0.01,0.99,.01)
y = qcauchy(aRange)
x = qnorm(aRange)
plot(x,y, type="l", main="Cauchy -- standard normal")
x = qt(aRange, 4)
y = qnorm(aRange)
plot(x,y, type="l", main="Standard normal -- t_4")
x = qlnorm(aRange, sdlog=.5)
y = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="uniform(2,4) -- log normal(0,.5)")
## C
source("./functions_Ch3.txt")
sample_data = scan("sample2019.txt")
plot(sample_data)
# qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
# qqlaplace(sample_data)
qqcauchy(sample_data)
plot(sample_data, type="l")
# qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
qqlaplace(sample_data)
qqnorm(sample_data)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
qqexp(sample_data)
qqt(sample_data, df=1)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=5.7, sdlog=1.5)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=3.7, sdlog=1.5)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
sample_data = sample_data[:-1]
#qqlaplace(sample_data)
# qqcauchy(sample_data)
sample_data = sample_data(:-1)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
### Exercise 2.2
## A
source("./temp.txt")
plot(sort(temp$eelde), sort(temp$terbeek), type="l")
qqnorm(sort(temp$eelde)); qqline(temp$eelde)
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
# Now assume temp$terbeek = Y = a + b * X with X = N(0,1)
# E(X) = 0. E(Y) =
mean(temp$terbeek) # = 16.59 = a
var(temp$terbeek) # = 4.043
# Var(Y) = b^2 * Var(X)
sqrt(4.043) # = 2.01 = b
normalizedTB = sort((temp$terbeek) - 16.59) / sqrt(2.01)
qqnorm(normalizedTB); qqline(normalizedTB)
help(abline)
# TODO: Eelde, C, en schrijven
hist(sort(temp$eelde) - sort(temp$terbeek))
help(abline)
qqnorm(sort(temp$terbeek)) ; abline(16.59, sqrt(2.01))
qqnorm(sort(temp$terbeek)) ; abline(16.59, sqrt(3.01))
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
#qqlaplace(sample_data)
# qqcauchy(sample_data)
sample_data = sort(sample_data)[1:length(sample_data)] # maar dan goed
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
plot(sample_data)
sample_data = scan("sample2019.txt")
plot(sample_data)
sample_data = scan("sample2019.txt")
plot(sort(sample_data))
#qqlaplace(sample_data)
# qqcauchy(sample_data)
sample_data = sort(sample_data)[1:length(sample_data) - 1] # maar dan goed
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
qqnorm(sample_data)
qqexp(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.5)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.1)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.9)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.1)
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(normalizedTB); qqline(normalizedTB) # nu snap ik die sqrt(2.01) hierboven niet meer
qqnorm(sort(temp$terbeek)) ; abline(16.59, 2.01)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
plot(x,y, type="l", main="Cauchy -- standard normal", xlab="Cauchy quantiles", ylab="Standard normal quantiles")
plot(x,y, type="l", main="Cauchy -- standard normal", ylab="Cauchy quantiles", xlab="Standard normal quantiles")
x = qcauchy(aRange)
y = qnorm(aRange)
plot(x,y, type="l", main="Cauchy -- standard normal", ylab="Cauchy quantiles", xlab="Standard normal quantiles")
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(sort(temp$eelde)); qqline(temp$eelde)
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(sort(temp$eelde)); qqline(temp$eelde)
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqt(sort(temp$eelde))
qqt(sort(temp$eelde), 5)
qqt(sort(temp$eelde), df=5)
qqt(sort(temp$eelde), df=1)
qqlnorm(sort(temp$eelde))
qqlcauchy(sort(temp$eelde))
qqcauchy(sort(temp$eelde))
help(abline)
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
qqnorm(normalizedTB); qqline(normalizedTB)
qqnorm(sort(temp$terbeek)) ; abline(mean(temp$terbeek), sqrt(var(temp$terbeek)))
x = qnorm(aRange)
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal -- t_4")
plot(x,y, type="l", main="Standard normal -- t dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles", ylab="Standard normal quantiles")
plot(x,y, type="l", main="Standard normal -- t dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles", ylab="Standard normal quantiles")
### Exercise 2.1
## A
par(mfrow=c(2,2))
aRange = seq(0.01,0.99,.01)
x = qcauchy(aRange)
y = qnorm(aRange)
plot(x,y, type="l", main="Cauchy -- standard normal", ylab="Cauchy quantiles", xlab="Standard normal quantiles")
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal -- t dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles", ylab="Standard normal quantiles")
### Exercise 2.1
## A
par(mfrow=c(2,2))
aRange = seq(0.01,0.99,.01)
y = qnorm(aRange)
x = qcauchy(aRange)
plot(x,y, type="l", main="Standard Cauchy dist. -- standard normal dist.", ylab="Cauchy quantiles", xlab="Standard normal quantiles")
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal dist. --\nt dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles", ylab="Standard normal quantiles")
x = qlnorm(aRange, sdlog=.5)
y = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="Uniform dist. between 2 and 4 --\nlog normal dist. with mean 0 and std .5")
y = qlnorm(aRange, sdlog=.5)
x = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="Uniform dist. between 2 and 4 --\nlog normal dist. with mean 0 and std .5",
xlab="Uniform dist. between 2 and 4 quantiles", ylab="log normal dist. with mean 0 and std .5 quantiles")
### Exercise 2.1
## A
par(mfrow=c(2,2))
aRange = seq(0.01,0.99,.01)
x = qcauchy(aRange)
y = qnorm(aRange)
plot(x,y, type="l", main="Standard Cauchy dist. -- standard normal dist.", ylab="Cauchy quantiles",
xlab="Standard normal quantiles")
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal dist. --\nt dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles",
ylab="Standard normal quantiles")
y = qlnorm(aRange, sdlog=.5)
x = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="Uniform dist. between 2 and 4 --\nlog normal dist. with mean 0 and std .5",
xlab="Uniform dist. between 2 and 4 quantiles", ylab="log normal dist. with mean 0 and std .5 quantiles")
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
qqnorm(sort(temp$eelde)); qqline(temp$eelde)
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
plot(sort(temp$eelde), sort(temp$terbeek), type="l")
plot(sort(temp$terbeek), type="l")
plot(sort(temp$eelde), type="l")
plot(sort(temp$terbeek), type="l")
par(mfrow=c(2,2))
aRange = seq(0.01,0.99,.01)
x = qcauchy(aRange)
y = qnorm(aRange)
plot(x,y, type="l", main="Standard Cauchy dist. -- standard normal dist.", ylab="Cauchy quantiles",
xlab="Standard normal quantiles")
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal dist. --\nt dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles",
ylab="Standard normal quantiles")
y = qlnorm(aRange, sdlog=.5)
x = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="Uniform dist. (min. 2 and max. 4) --\nlog normal dist. with mean 0 and std .5",
xlab="Uniform dist. between 2 and 4 quantiles", ylab="log normal dist. with mean 0 and std .5 quantiles")
par(mfrow=c(2,2))
aRange = seq(0.01,0.99,.01)
x = qcauchy(aRange)
y = qnorm(aRange)
plot(x,y, type="l", main="Standard Cauchy dist. -- standard normal dist.", ylab="Cauchy quantiles",
xlab="Standard normal quantiles")
y = qt(aRange, 4)
x = qnorm(aRange)
plot(x,y, type="l", main="Standard normal dist. --\nt dist. with 4 DOF", xlab="t dist. with 4 DOF quantiles",
ylab="Standard normal quantiles")
y = qlnorm(aRange, sdlog=.5)
x = qunif(aRange, min=2, max=4)
plot(x,y, type="l", main="Uniform dist. (min. 2 and max. 4) --\nlog normal dist. with mean 0 and std .5",
xlab="Uniform dist. (min. 2 and max. 4) quantiles", ylab="log normal dist. with mean 0 and std .5 quantiles")
ons_Ch3.txt")
sample_data = scan("sample2019.txt")
plot(sort(sample_data))
#qqlaplace(sample_data)
# qqcauchy(sample_data)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.1)
qqlnorm(sample_data, meanlog=2.7, sdlog=1.1); qqline(sample_data)
qqlnorm(sample_data, meanlog=3, sdlog=1.1);
qqnorm(sample_data)
## C
par(mfrow=c(1,1))
source("./functions_Ch3.txt")
sample_data = scan("sample2019.txt")
plot(sort(sample_data))
qqlnorm(sample_data, meanlog=3, sdlog=1.1);
qqlnorm(sample_data, meanlog=113, sdlog=1.1)
qqlnorm(sample_data, meanlog=3, sdlog=1.1)
mean(sample_data)
log(mean(sample_data))
m = mean(sample_data); v = var(sample_data)
m = mean(sample_data); v = var(sample_data); z = 1 + v / (m * m)
mu = log(m / sqrt(z))
mu = log(m / sqrt(z)); sd = log(z)
qqlnorm(sample_data, meanlog=mu, sdlog=sd)
### Exercise 2.2
## A
par(mfrow=c(1,1))
### Exercise 2.2
## A
par(mfrow=c(2,2))
source("./temp.txt")
plot(sort(temp$eelde), type="l")
plot(sort(temp$terbeek), type="l")
qqnorm(sort(temp$eelde)); qqline(temp$eelde)
qqnorm(sort(temp$terbeek)); qqline(temp$terbeek)
plot(sort(temp$eelde), type="l", main="Eelde", xlab="Year since 1964",
ylab="Mean temperature in July"))
### Exercise 2.2
## A
par(mfrow=c(2,2))
source("./temp.txt")
plot(sort(temp$eelde), type="l", main="Eelde", xlab="Year since 1964",
ylab="Mean temperature in July"))
plot(sort(temp$eelde), type="l", main="Eelde", xlab="Year since 1964",
ylab="Mean temperature in July")
plot(sort(temp$terbeek), type="l", main="Terbeek", xlab="Year since 1964",
ylab="Mean temperature in July")
qqnorm(sort(temp$eelde))
qqnorm(sort(temp$terbeek))
hist(z-y, prob=T) # TODO: miss dus met prob=T
# TODO: Eelde, C, en schrijven
hist(sort(temp$eelde) - sort(temp$terbeek))
y=unlist(sort(temp$eelde))
z=unlist(sort(temp$terbeek))
hist(z-y, prob=T) # TODO: miss dus met prob=T
par(mfrow=c(1,1))
y=unlist(sort(temp$eelde))
z=unlist(sort(temp$terbeek))
hist(z-y, prob=T) # TODO: miss dus met prob=T
r = mean(temp$terbeek)
w = var(temp$terbeek)
normalizedTerbeek = sort((temp$terbeek - r) / sqrt(w))
qqnorm(normalizedEelde); qqline(normalizedEelde)
qqnorm(normalizedTerbeek); qqline(normalizedTerbeek)
abline(r, sqrt(w))
qqnorm(normalizedTerbeek); #qqline(normalizedTerbeek)
abline(r, sqrt(w))
abline(sqrt(w), r)
abline(r, sqrt(w))
qqnorm(normalizedTerbeek); #qqline(normalizedTerbeek)
abline(r, sqrt(w))
qqnorm(temp$terbeek); abline(r, sqrt(w))
qqlnorm(sample_data, meanlog=mu, sdlog=sd); abline(mu, sd)
qqlnorm(sample_data, meanlog=mu, sdlog=sd); abline(mu, sqrt(sd))
#qqlaplace(sample_data)
# qqcauchy(sample_data)
sample_data = sort(sample_data)[1:length(sample_data) - 1] # mag vast niet
m = mean(sample_data); v = var(sample_data); z = 1 + v / (m * m)
## C
par(mfrow=c(1,1))
source("./functions_Ch3.txt")
sample_data = scan("sample2019.txt")
plot(sort(sample_data))
#qqlaplace(sample_data)
# qqcauchy(sample_data)
#sample_data = sort(sample_data)[1:length(sample_data) - 1] # mag vast niet
m = mean(sample_data); v = var(sample_data); z = 1 + v / (m * m)
mu = log(m / sqrt(z)); sd = log(z)
qqlnorm(sample_data, meanlog=mu, sdlog=sd); abline(mu, sqrt(sd))
qqlnorm(sample_data, meanlog=mu, sdlog=sd); abline(m, sqrt(v))
#qqlaplace(sample_data)
# qqcauchy(sample_data)
#sample_data = sort(sample_data)[1:length(sample_data) - 1] # mag vast niet
m = mean(sample_data); v = var(sample_data); z = 1 + v / (m * m)
mu = log(m / sqrt(z)); sd = log(z)
qqlnorm(sample_data, meanlog=mu, sdlog=sd); abline(m, sqrt(v))
