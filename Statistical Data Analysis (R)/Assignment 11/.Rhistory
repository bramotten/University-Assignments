install.packages("tidyverse")
5+87
gamma(2)
gamma(3)
gamma(6)
correction_J <- function(a) { gamma(a / 2) / (sqrt(a/2) * (a - 1) / 2) }
correction_J(200)
correction_J <- function(a) { gamma(a / 2) / ( sqrt(a/2) * ( (a - 1) / 2 ) ) }
correction_J(200)
correction_J <- function(a) { 1 - 3 / (4 * a - 9) }
correction_J(200)
get_name <- function() {
if (options$effectSizesCheckbox == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
get_name <- function() {
if ("cohensD" == "cohensD") {
return("Cohen's d")
}	else if (options$effectSizesCheckbox == "glassD") {
return("Glass' delta")
# Should give feedback on which data is considered 2.
} else if (options$effectSizesCheckbox == "hedgesG") {
return("Hedges' g (corrected)")
}
}
get_name()
install.packages("tidyverse")
phyper(43,70,50,81)
phyper(43, 81, 39, 70)
?phyper
rm(list = ls())
par(mfrow = c(1, 1))
set.seed(123)
setwd(
sprintf(
"%s%s",
"C:\\Users\\Bram\\Documents\\Google Drive\\",
"Uni\\Statistical Data Analysis\\Assignment 11"
)
)
source("functions_Ch7.txt")
source("functions_Ch8.txt")
### Exercise 1
## A
nausea <- read.table("nausea.txt", header = TRUE)
nausea$No.Nausea <-
nausea$Number.of.Patients - nausea$Incidence.of.Nausea
pvec <- c()
ovec <- c()
for (i in 1:5) {
ding <- matrix(
c(
nausea$Incidence.of.Nausea[1],
nausea$No.Nausea[1],
nausea$Incidence.of.Nausea[i],
nausea$No.Nausea[i]
),
nrow = 2,
ncol = 2
)
pvec[i] <- fisher.test(ding, alternative = "g")[1]
ovec[i] <- fisher.test(ding, alternative = "g")[3]
}
nausea$p <- pvec
nausea$odds <- ovec
nausea
## C
# Change data a bit so it works for a chisq.test function in R
no_nausea <-
nausea$Number.of.Patients - nausea$Incidence.of.Nausea
n <- matrix(no_nausea, nrow = 5, ncol = 1)
colnames(n) = 'no nausea'
nausea2  <-  cbind(nausea$Incidence.of.Nausea, n)
c <- chisq.test(nausea2)$expected
chisq.test(nausea2)
# TODO: that expectations / N table
## D
residuals <- nausea - chisq.test(nausea2)$expected
contribution <- chisq.test(nausea2)$residuals
normalized_dist <- round(chisq.test(nausea2)$stdres, 2)
## E
pvec2 <- c()
for (i in 1:5) {
ding <- matrix(
c(
nausea$Incidence.of.Nausea[1],
nausea$No.Nausea[1],
nausea$Incidence.of.Nausea[i],
nausea$No.Nausea[i]
),
nrow = 2,
ncol = 2
)
pvec2[i] <- chisq.test(ding)$p.value
}
pvec2
### Exercise 2
## B
austen <- read.table("austen.txt", header = TRUE)
austens_own <- austen[1:3]
chisq.test(austens_own)
chisq.test(austens_own)$expected
chisq.test(austens_own)$residuals
## C
chisq.test(austen[3:4])
chisq.test(austen[3:4])$expected
chisq.test(austen[3:4])$residuals
chisq.test(austen[, 1:3], simulate.p.value = TRUE, B = 2000)
chisq.test(austen[, 3:4], simulate.p.value = TRUE, B = 2000)
## E
A1 <- austen[, 1:3]
m1 <- maxcontributionscat(A1)
bootval1 <- bootstrapcat(A1, 1000, maxcontributionscat)
mean(bootval1 >= m1)
A2 <- austen[, 3:4]
m2 <- maxcontributionscat(A2)
bootval2 <- bootstrapcat(A2, 1000, maxcontributionscat)
mean(bootval2 >= m2)
## F
maxcontributionscat4 <- function(x) {
C <- chisq.test(x)$residuals
sort(C)[length(C) - 3]
}
m1 <- maxcontributionscat4(austen[, 1:3])
bootval1 <- bootstrapcat(austen[, 1:3], 1000, maxcontributionscat4)
mean(bootval1 >= m1)
m2 <- maxcontributionscat4(austen[, 3:4])
bootval2 <- bootstrapcat(austen[, 3:4], 1000, maxcontributionscat4)
mean(bootval2 >= m2)
austen[, 3:4]
austen
C = [1,2,-4,2]
C = c(1,2,-4,2)
sort(C)[length(C) - 3]
sort(C)
C = c(1,2,-4,2, -9, 0)
sort(C)
sort(C)[length(C) - 3]
C = abs(C)
C
sort(C)
## F
maxcontributionscat4 <- function(x) {
C <- chisq.test(x)$residuals
sort(abs(C))[length(C) - 3]
}
m1 <- maxcontributionscat4(austen[, 1:3])
bootval1 <- bootstrapcat(austen[, 1:3], 1000, maxcontributionscat4)
mean(bootval1 >= m1)
m2 <- maxcontributionscat4(austen[, 3:4])
bootval2 <- bootstrapcat(austen[, 3:4], 1000, maxcontributionscat4)
mean(bootval2 >= m2)
C
sort(abs(C))
sort(abs(C))[length(C)-3]
sort(abs(C))[length(C)-4]
chisq.test(austen[3:4])
chisq.test(austen[3:4])$expected
chisq.test(austen[3:4])$residuals
chisq.test(austen[, 1:3], simulate.p.value = TRUE, B = 2000)
chisq.test(austen[, 3:4], simulate.p.value = TRUE, B = 2000)
A1 <- austen[, 1:3]
m1 <- maxcontributionscat(A1)
bootval1 <- bootstrapcat(A1, 1000, maxcontributionscat)
mean(bootval1 >= m1)
A2 <- austen[, 3:4]
m2 <- maxcontributionscat(A2)
bootval2 <- bootstrapcat(A2, 1000, maxcontributionscat)
mean(bootval2 >= m2)
N=cbind(nausea$Incidence.of.Nausea, n)
rownames(N)= c('Placebo', 'Chlorpromazine', 'Dimenhydrinate','Pentobarbital(100mg)', 'Pentobarbital(150mg)' )
colnames(N)=c('nausea', 'no nausea')
N
n
nausea2
c <- chisq.test(nausea2)$expected
chisq.test(nausea2)$expected
nausea2
chisq.test(nausea2)$expected
maxcontributionscat4 <- function(x) {
C <- chisq.test(x)$residuals
sort(abs(C))[length(C) - 3]
}
m1 <- maxcontributionscat4(austen[, 1:3])
bootval1 <-
bootstrapcat(austen[, 1:3], 1000, maxcontributionscat4)
mean(bootval1 >= m1)
m2 <- maxcontributionscat4(austen[, 3:4])
bootval2 <-
bootstrapcat(austen[, 3:4], 1000, maxcontributionscat4)
mean(bootval2 >= m2)
### Exercise 1
## A
nausea <- read.table("nausea.txt", header = F)
### Exercise 1
## A
nausea <- read.table("nausea.txt", header = T)
